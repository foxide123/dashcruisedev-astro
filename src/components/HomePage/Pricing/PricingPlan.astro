---
/* import CheckIcon from "@/components/icons/CheckIcon"; */
import SubscribeButton from '@/components/HomePage/Pricing/SubscribeButton';
import CheckIcon from '@/components/icons/CheckIconCustom';
import PricingCurrency from './PricingCurrency';
import { currencyFromStore } from '@/store/currencyStore';
import { useStore } from '@nanostores/react';

type PricingFeatureProp = {
  featureHighlight: string;
  featureDescription: string;
};

interface Params {
  locale: string;
  planName: string;
  planPrice: string;
  planDescription: string;
  additionalPagePrice: string | null;
  bgColor: string;
  textPrimaryColor: string;
  textSecondaryColor: string;
  features: PricingFeatureProp[];
  extraPagesHeader: string;
  iteration: string;
  extraPagesDescription: string;
}

const {
  locale,
  planName,
  planPrice,
  planDescription,
  additionalPagePrice,
  features,
  bgColor,
  textPrimaryColor,
  textSecondaryColor,
  extraPagesHeader,
  iteration,
  extraPagesDescription,
} = Astro.props;
/*  const cookieStore = await cookies();
  const currency = cookieStore.get("currency")?.value || "usd";

  const priceSymbol = currency === "usd" ? "$" : "â‚¬";
  const language = cookieStore.get("language")?.value || "en"; */
---

<div
  class={`w-full lg:order-1 lg:mt-0 lg:flex-none xl:w-2/5 lg:h-full sm:w-2/3 relative flex-1 p-8 order-1 shadow-xl rounded-3xl ${bgColor} text-${textPrimaryColor} mt-5`}
>
  {/*Icon +  Price + Description + Bottom Border */}
  <div class={`mb-7 pb-5 flex-col items-center border-b `}>
    {/* Icon + Name + Price */}
    <div class="flex flex-row items-center justify-center">
      <div
        class="md:block overflow-hidden absolute w-20 h-20 left-6 top-6 hidden"
      >
        <img
          src="https://imagedelivery.net/Ap_RIQMnvK_LYOq1vIFisQ/8ecc571e-8203-479c-f4e9-807c9571a100/thumbnail300x300"
          sizes="280px"
          alt="Pricing Plan"
          class="rounded-3xl object-contain"
          loading="lazy"
        />
      </div>
      <div class="md:ml-5 w-full ml-0 mx-auto flex flex-col items-center">
        <span
          class={`block mx-auto text-2xl font-semibold ${textSecondaryColor}`}
        >
          {planName}
        </span>
        <div>
          {' '}
          {
            /*           <span>
                <span class="font-medium text-xl align-top">
                  {priceSymbol}&thinsp;
                </span>
                <span class="text-3xl font-bold">{planPrice}</span>
              </span>
              <span class=" font-medium">&thinsp;/ month</span> */
          }
          <span class=" mx-auto flex items-center justify-center text-3xl font-bold">
            <PricingCurrency  basePrice={Number(planPrice as string)}  client:visible/>
          </span>
        </div>
      </div>
    </div>
    {/* Plan Description */}
    <div class="md:text-start text-center">
      <p
        class={`text-2xl mt-5 mb-2 px-2 text-${textPrimaryColor} "mb-[-10px]"`}
      >
        {planDescription}
      </p>
    </div>
  </div>

  <ul class="mb-10 font-medium text-xl">
    {
      features.map((feature: any) => (
        <li class="flex text-lg mb-2 items-start">
          <CheckIcon color={`text-${textPrimaryColor}`} marginTop="1" />
          <span class="ml-3">
            <span class={`text-${textPrimaryColor} font-semibold text-xl`}>
              {feature.featureHighlight}
            </span>
            <span class={`text-${textPrimaryColor}`}>
              {feature.featureDescription}
            </span>
          </span>
        </li>
      ))
    }
  </ul>

  <div
    class={` ${additionalPagePrice ? 'block' : 'hidden'} border-${textPrimaryColor} text-${textPrimaryColor} border-y py-5 mb-5 text-center`}
  >
    <h2 class="font-semibold">{extraPagesHeader}</h2>
    <span class="font-medium text-xl align-top">
      {/*  {priceSymbol}&thinsp; */}$
    </span>
    <span class="text-3xl font-bold">
      {additionalPagePrice} / {iteration}{' '}
    </span>
    <p class="inline-block">{extraPagesDescription}</p>
  </div>
  <SubscribeButton
    customAmount={planPrice}
    text="Subscribe"
    currency="usd"
    language={locale}
    planName={planName}
    client:visible
  />
</div>

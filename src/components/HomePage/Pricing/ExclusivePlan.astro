---
import CheckIconCustom from '@/components/icons/CheckIconCustom';
import { IconSizeEnum } from '@/types/icon_types';
import PricingCurrency from './PricingCurrency';
import type { StripePriceSimplified } from '@/types/stripe_types';
import PricingCurrencyServer from './PricingCurrencyServer.astro';

export interface Props {
  planData: {
    header: string;
    description: string;
    interval: string;
    features: string[];
    cta: string;
    lookupKey: string;
  };
  prices: StripePriceSimplified[];
}

const { planData, prices } = Astro.props;
const { locale } = Astro.params;


---

<div
  class="z-20 lg:w-[640px] lg:h-[480px] lg:my-0 w-full my-5 p-6 bg-blur-500/90 backdrop-blur-md rounded-[1.25rem] flex items-center justify-center text-white border-[1px] border-carrot-600"
>
  <div class="w-full">
    <h1 class="text-2xl font-medium leading-8 space-y-6">
      {planData.header}
    </h1>
    <h2 class="text-base font-normal leading-6 space-y-4">
      {planData.description}
    </h2>
    <div
      class="relative flex text-5xl font-medium leading-15 space-y-12 tracking-tight my-6"
    >
      <PricingCurrency
        prices={prices}
        lookupKey={planData.lookupKey}
        client:load
      />
      <!--       <div id="static absolute inset-0 border-2 border-green-500">
        <PricingCurrencyServer prices={prices} currency={currency} />
      </div> -->
    </div>
    <ul class="text-base font-medium leading-6 space-y-4">
      {
        planData.features.map((feature) => (
          <li class="flex">
            <CheckIconCustom size={IconSizeEnum.small} client:load />
            {feature}
          </li>
        ))
      }
    </ul>

    <a
      href=`/${locale}/#pricing_section`
      class="mt-5 flex justify-center items-center bg-carrot-500 rounded-xl py-6 px-4 text-center text-white text-2xl w-full cursor-pointer"
    >
      {planData.cta}
    </a>
  </div>
</div>

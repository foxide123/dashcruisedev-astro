---
type PortfolioItem = {
  name: string;
  imageUrl: string;
};

interface PortfolioDataType {
  header1: string;
  header2: string;
  description: string;
  portfolioItems: PortfolioItem[];
}

interface Props {
  portfolioData: PortfolioDataType;
}

const { portfolioData } = Astro.props;

const firstPortfolioElement = portfolioData.portfolioItems[0];
---
<script>
  window.addEventListener("DOMContentLoaded", () => {
    const observer = new IntersectionObserver((entries, obs) => {
      entries.forEach((entry) => {
        if(entry.isIntersecting) {
          const portfolioContainer = entry.target;
          const images = portfolioContainer.querySelectorAll("img[data-src]") as NodeListOf<HTMLImageElement>;
          images.forEach((image) => {
            if(image.dataset.src){
              image.src = image.dataset.src;
            }
          })

          obs.unobserve(portfolioContainer)
        }
      })
    }, { threshold: 0, rootMargin: '0px 0px -50% 0px', root:null})
    const portfolioContainer = document.getElementById("portfolio-container") as HTMLDivElement;
    observer.observe(portfolioContainer);
  })
</script>
<style>
  @media (width >= 64rem) {
    .img-container {
      height: 100%;
    }
  }
  .img-container {
    height: 300px;
    width: 100%;
    border-radius: 20px;
    overflow: hidden;
    opacity: 90%;
  }
</style>
<section
  id="portfolio"
  class="custom-section-padding bg-white caret-transparent flex justify-center w-screen"
>
  <!--   <FadeInSection> -->
  <div
    class="custom-section-width text-center h-fit mx-auto"
  >
    <h1 class="text-[64px] w-full leading-[105%] tracking-[-3%] font-semibold">
      {portfolioData.header1}
      <span class="font-normal text-[#848080]">{portfolioData.header2}</span>
    </h1>
    <p
      class="text-[#3E3C3A] mx-auto max-w-[678px] text-base font-normal leading-[150%] tracking-[-0.5%] mt-6 w-full text-center"
    >
      {portfolioData.description}
    </p>
    {/* Portfolio Container */}
    <div id="portfolio-container" class="mt-15 lg:flex-row flex-col flex justify-between gap-5">
      <div class="flex-1 flex flex-col w-full min-h-[600px]">
        <div class="grow-1 img-container">
          <img
          loading="lazy"
            class="w-full h-full object-cover"
            data-src={firstPortfolioElement.imageUrl}
          />
        </div>
<!--         <div class="lg:block hidden">
          <div class="flex">
            <p>2025</p>
            <p>Full Website Build</p>
          </div>
          <p>Website For Immersive Travel Stories & Analog Photography</p>
        </div> -->
      </div>
      <div class="flex-1 gap-5 flex flex-col w-full">
        {
          portfolioData.portfolioItems.slice(1).map((item) => (
            <div class="img-container">
              <img loading="lazy" class="w-full h-full object-cover" data-src={item.imageUrl} />
            </div>
          ))
        }
      </div>
    </div>
  </div>
  <!--   </FadeInSection> -->
</section>

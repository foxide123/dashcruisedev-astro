---
import { getRelativeLocaleUrl } from 'astro:i18n';
import Layout from '@/layouts/MainLayout.astro';
import { enHomeMetadata } from "@/data/dictionaries/en/metadata/enHomeMetadata";
import { deHomeMetadata } from "@/data/dictionaries/de/metadata/deHomeMetadata";
import { roHomeMetadata } from "@/data/dictionaries/ro/metadata/roHomeMetadata";
import { plHomeMetadata } from "@/data/dictionaries/pl/metadata/plHomeMetadata";

const { locale } = Astro.params;

import {
  SupportedLocaleArray,
  translations,
  type SupportedLocale,
} from '@/utils/translationUtils';
import { getStripePrices } from '@/actions/stripeActions';
import HomePage from '../_shared/HomePage.astro';

const supportedLocale = locale as SupportedLocale;

const homeData = await translations[supportedLocale]['home_page.json']();
const commonData = await translations[supportedLocale]['common.json']();
const heroData = homeData['hero'];

const metadata = (() => {
  switch(locale){
    case "de":
      return deHomeMetadata;
    case "ro":
      return roHomeMetadata;
    case "pl":
      return plHomeMetadata;
    default: 
      return enHomeMetadata;
  }
})()

export async function getStaticPaths() {
  return SupportedLocaleArray.map((SupportedLocale) => ({
    params: { locale: SupportedLocale },
  }));
}

const { data, error } = await getStripePrices();

console.log('Data on home page:', data);

let prices = null;
if(!error){
  prices = data;
}

export const prerender = true;
---

<Layout metadata={metadata}>
  <HomePage prices={prices} homeData={homeData}  commonData={commonData} locale={locale}/>
</Layout>

---
import BaseHead from '@/components/LayoutComponents/BaseHead.astro';
import Header from '@/components/LayoutComponents/Header.astro';
import Footer from '@/components/LayoutComponents/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '@/consts';
import { getCollection } from 'astro:content';
import FormattedDate from '@/components/FormattedDate.astro';
import enBlogData from '@/data/dictionaries/en/blog_page.json';
import deBlogData from '@/data/dictionaries/de/blog_page.json';
import Layout from "@/layouts/MainLayout.astro"
import CursorWrapper from '@/components/CursorWrapper';
import { SupportedLocaleArray } from '@/utils/translationUtils';
import type { Props as MetadataProps } from '@/components/seo/Metadata.astro';
import { fetchSlugsWithLocale } from '@/actions/articleActions';
import { SiteURL } from '@/globals';

type PostParams = {
    title: string;
    description: string;
    date: string;
    image_src: string;
    slug: string;
  };

const lg_screen_width = 'lg:w-[85vw]';
const default_screen_width = 'w-[75vw]';


const { locale } = Astro.params;

const blogData = locale === 'en' ? enBlogData : deBlogData;

const mainPost = blogData.posts[0];
const otherPosts = blogData.posts.slice(1);

const metadata: MetadataProps = {
  title: 'Web Agency',
  description: 'Web Agency Offering Custom Websites',
  keywords: ['web agency', 'websites', 'custom websites', 'astro'],
  creator: 'Jakub Cezary Kolando',
  publisher: 'Jakub Cezary Kolando',
  metadataBase: new URL(SiteURL),
  alternates: {
    canonical: '/blog',
    languages: {
      en: '/en/blog',
      de: '/de/blog',
      pl: '/pl/blog',
      ro: "/ro/blog",
      'x-default': "/en/blog"
    },
  },
  openGraph: {
    url: `${SiteURL}`,
    title: "Web Agency",
    description: "Web Agency Offering Custom Websites",
    image: `${SiteURL}/og-image.png`,
  },
  imagesToPreload: {
    remoteImages: [
      {
        href: "https://imagedelivery.net/Ap_RIQMnvK_LYOq1vIFisQ/22218a4e-1efb-43dd-ff1e-562588e15a00/hd1920x1080",
        alt: "Background Image"
      }
    ]
  }
};

export async function getStaticPaths() {
  return SupportedLocaleArray.map((SupportedLocale) => (
    {
      params: { locale: SupportedLocale }
    }
  ))
}

export const prerender = true;
// cache for 1h, serve stale for 60s while revalidating
Astro.response.headers.set('Cache-Control', 'public, s-maxage=3600, stale-while-revalidate=60');
---

<Layout metadata={metadata}>
<div class=`caret-transparent w-screen lg:py-10 min-h-[100vh] ${lg_screen_width} ${default_screen_width} mx-auto`>
<!-- <CursorWrapper client:idle> -->
    <a href={`/${locale}/blog/${mainPost.slug}`}>
      {/* Large post Preview */}
      <div
        class={`mx-auto lg:h-[625px]  text-center bg-gray-100 flex flex-col cursor-pointer`}
      >
        {/* Image */}
        <span
          class="lg:w-full lg:h-[500px] aspect-video relative flex justify-center items-center overflow-hidden hover:opacity-75"
        >
          <img
            alt="main post image"
            src={`${mainPost.image_src}/hd1920x1080`}
            class="object-cover w-full absolute top-0 left-0 transform translate-y-[-20%]"
          />
          <div
            class="w-[95%] h-[95%] mx-auto absolute"
            data-cursor="READ"
          >
          </div>

          {
            /*  <HoverImageWrapper src={`${mainPost.image_src}/hd1920x1080`}/> */
          }
        </span>

        <div class="p-2">
          {/*Post description */}
          <h1 class="lg:text-2xl text-base font-semibold">
            {mainPost.title}
          </h1>
          <h3 class="text-xs leading-7">{mainPost.date}</h3>
          <p class="lg:text-base text-xs tracking-wide text-muted-foreground">
            {mainPost.description}
          </p>
        </div>
      </div>
    </a>
    {/* Posts (the rest) */}
    <div
      class={`lg:mt-16 ${lg_screen_width} ${default_screen_width} mx-auto flex flex-col gap-14 mt-15`}
    >
      <div class="grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3">
        {
          otherPosts.map((post: PostParams, index: number) => {
            {
              /* Individual Post */
            }
            return (
              <a href={`/${locale}/blog/${post.slug}`}>
                <div
                  class="flex cursor-pointer flex-col gap-2 hover:opacity-75"
                >
                  <span class=" block relative aspect-video rounded-md bg-muted overflow-hidden">
                    <img
                      src={`${post.image_src}/card600x400`}
                      alt="post image"
					  class="object-cover w-full absolute top-0 left-0"
                    />
                    <div
                      class="w-[95%] h-[95%] mx-auto absolute cursor-pointer"
                      data-cursor="READ"
                    />
                  </span>
                  <h1 class="lg:text-xl text-sm font-bold tracking-tight">
                    {post.title}
                  </h1>
                  <p class="lg:text-base mt-[-6px] text-[13px] text-muted-foreground">
                    {post.description}
                  </p>
                </div>
              </a>
            );
          })
        }
      </div>
    </div>
    {/* View more */}
    <div class="flex justify-center w-full mt-6 mb-[60px]">
      <button
        class="border-1 border-black text-center w-fit py-2 px-5 rounded-sm"
      >
        {' '}
        View more
      </button>
    </div>
<!--   </CursorWrapper> -->
</div>
</Layout>